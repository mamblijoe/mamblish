version: '3.7'

services:
  back:
    image: node:14.18-alpine
    container_name: ${COMPOSE_PROJECT_NAME}_back
    restart: unless-stopped
    working_dir: /app
    entrypoint: ["npm", "run", "start:dev"]
    env_file:
      - .env
    volumes:
      - $PWD/apps/back:/app
    expose:
      - 5000

  front:
    image: node:14.18-alpine
    container_name: ${COMPOSE_PROJECT_NAME}_front
    restart: unless-stopped
    working_dir: /app
    entrypoint: ["npm", "run", "proxy"]
    env_file:
      - .env
    volumes:
      - $PWD/apps/front:/app
    expose:
      - 3000

  nginx_front:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_nginx_front
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=mamblish.127.0.0.1.nip.io
    volumes:
      - ./nginx/default_local_front.conf:/etc/nginx/conf.d/default.conf
    expose:
      - 80

  nginx_back:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_nginx_back
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=back.mamblish.127.0.0.1.nip.io
    volumes:
      - ./nginx/default_local_back.conf:/etc/nginx/conf.d/default.conf
    expose:
      - 80

#  redis:
#    image: redis
#    container_name: ${COMPOSE_PROJECT_NAME}_redis
#    restart: unless-stopped
#    expose:
#      - 6379
#    healthcheck:
#      test: [ "CMD", "redis-cli", "ping" ]
#      interval: 1s
#      timeout: 3s
#      retries: 30

  db:
    image: mysql:8.0
    container_name: ${COMPOSE_PROJECT_NAME}_db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - ${PWD}/.docker/volumes/db:/var/lib/mysql
    expose:
      - 3306
networks:
  default:
    external: true
    name: localhost
